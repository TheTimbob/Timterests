package web

templ ReadingListPage(readingLists []ReadingList, tags []string, design string) {
	@Base() {
		<div id="reading-list-container" class="category-container">
			<div class="flex justify-between items-center mb-2">
				<h1 class="category-title">Reading List</h1>
                <div>
                    <select
                        class="filter-select"
                        hx-get="/reading-list"
                        hx-target="#reading-list"
                        hx-trigger="change"
                        hx-include="[name='design']"
                        name="tag">
                        <option value="all">All</option>
                        for _, tag := range tags {
                            <option value={ tag }>{ tag }</option>
                        }
                    </select>
                    <select
                        class="filter-select"
                        hx-get="/reading-list"
                        hx-target="#reading-list"
                        hx-trigger="change"
                        hx-include="[name='tag']"
                        name="design">
                            <option value="list">List</option>
                            <option value="grid">Grid</option>
                            <option value="links">Links</option>
                    </select>
                </div>
			</div>
			@ReadingListList(readingLists, design)
		</div>
	}
}

templ ReadingListList(readingList []ReadingList, design string) {
	<ul id="reading-list">
    	if design == "grid" {
			for i := 0; i < len(readingList); i += 4 {
				<li class="grid-list-element">
					for j := i; j < i+4 && j < len(readingList); j++ {
						@ReadingListMiniCard(readingList[j].ID, readingList[j].Title, readingList[j].Author, readingList[j].Image, readingList[j].Tags)
					}
				</li>
			}
        } else if design == "links" {
            for _, book := range readingList {
                <li>
                    @ReadingListLink(book.ID, book.Title)
                </li>
            }
		} else {
            for _, book := range readingList {
                <li>
                    @ReadingListCard(book.ID, book.Title, book.Subtitle, book.Body, book.Image, book.Tags)
                </li>
            }
        }
	</ul>
}

templ ReadingListCard(readingListID, title, subtitle, body, imagePath string, tags []string) {
	<div class="card-container" hx-get={"/book?id=" + readingListID} hx-target=" #main-content" hx-swap="innerHTML" tabindex="0">
		<img src={ string(templ.SafeURL(imagePath)) } alt="Book image" class="card-image">
        <div class="ml-4">
			<div class="card-title-container">
				<h1 class="card-title">{ title }</h1>
				<h2 class="card-subtitle">{ subtitle }</h2>
			</div>
			<p class="card-body">
                @templ.Raw(body)
            </p>
			<div class="tags-container">
				for _, tag := range tags {
					<p class="card-tag">{ tag }</p>
				}
			</div>
		</div>
	</div>
}

templ ReadingListMiniCard(bookID, title, author, imagePath string, tags []string) {
	<div class="mini-card-container" hx-get={"/book?id=" + bookID} hx-target=" #main-content" hx-swap="innerHTML" tabindex="0">
		<img src={ string(templ.SafeURL(imagePath)) } alt="Book image" class="card-image">
		<div class="ml-2">
			<div class="card-title-container">
				<h2 class="card-subtitle">{ title }</h2>
				<p>{ author }</p>
			</div>
			<div class="tag-container">
				for _, tag := range tags {
					<p class="card-tag">{ tag }</p>
				}
			</div>
		</div>
	</div>
}

templ ReadingListLink(articleID, title string) {
    <div class="hyperlink" hx-get={"/book?id=" + articleID} hx-target="#main-content" hx-swap="innerHTML" tabindex="0">
        <p>{ title }</p>
    </div>
}

templ BookPage(readingList ReadingList) {
	<div id="reading-list-container">
		<h1 class="category-title">{ readingList.Title }</h1>
		<h2 class="category-subtitle">{ readingList.Subtitle }</h2>
		<p>Author: { readingList.Author }</p>
		<p>Published: { readingList.Published }</p>
		<p>ISBN: { readingList.ISBN }</p>
		<p>Website: <a href={ templ.SafeURL(readingList.Website) } class="hyperlink" target="_blank">{ readingList.Website }</a></p>
		<p>Status: { readingList.Status }</p>
		@templ.Raw(readingList.Body)
		<br>
		<div>I am not affiliated with, nor do I own any rights to, the books listed in my reading list. All purchase links are non-affiliate and provided solely for informational purposes.</div>
	</div>
}
