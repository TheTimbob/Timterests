package web

import (
    "timterests/cmd/web/components"
)

templ ReadingListPage(readingLists []ReadingList, tags []string, design string) {
	@Base() {
		<div id="reading-list-container" class="category-container">
			<div class="flex justify-between items-center mb-2">
				<h1 class="category-title">Reading List</h1>
                @components.FilterTags("/reading-list", tags)
                @components.FilterDesign("/reading-list")
			</div>
			@ReadingListList(readingLists, design)
		</div>
	}
}

templ ReadingListList(readingList []ReadingList, design string) {
	<ul id="reading-list">
    	if design == "grid" {
			for i := 0; i < len(readingList); i += 4 {
				<li class="grid-list-element">
					for j := i; j < i+4 && j < len(readingList); j++ {
						@components.MiniCard(readingList[j].Title, "", readingList[j].Author, readingList[j].Image, readingList[j].Tags)
					}
				</li>
			}
        } else if design == "links" {
            for _, book := range readingList {
                <li>
                    @components.Link(book.Title, book.Author, "/book?id=" + book.ID)
                </li>
            }
		} else {
            for _, book := range readingList {
                <li>
                    @components.Card(book.Title, book.Subtitle, "", book.Body, book.Image, "/book?id=" + book.ID, book.Tags)
                </li>
            }
        }
	</ul>
}

templ BookPage(readingList ReadingList) {
    @Base() {
        @BookDisplay(readingList)
    }
}

templ BookDisplay(readingList ReadingList) {
	<div id="reading-list-container">
		<h1 class="category-title">{ readingList.Title }</h1>
		<h2 class="category-subtitle">{ readingList.Subtitle }</h2>
		<p>Author: { readingList.Author }</p>
		<p>Published: { readingList.Published }</p>
		<p>ISBN: { readingList.ISBN }</p>
		<p>Website: <a href={ templ.SafeURL(readingList.Website) } class="hyperlink" target="_blank">{ readingList.Website }</a></p>
		<p>Status: { readingList.Status }</p>
		@templ.Raw(readingList.Body)
		<br>
		<div>I am not affiliated with, nor do I own any rights to, the books listed in my reading list. All purchase links are non-affiliate and provided solely for informational purposes.</div>
	</div>
}
